knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library (TSstudio)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
data<-read.csv("project.csv",  sep=",", dec="." , header=T)
summary(data)
data=data[,-1]
project  <- ts(data, frequency=12, start=c(1994,5))
project
library (TSstudio)
split_project <- ts_split(ts.obj = project, sample.out = 63)
training <- split_project$train
testing <- split_project$test
length(training)
length(testing)
plot(training,ylab="us diesel retail price ",xlab="date",  col= 'blue', type="l")
boxplot (training~ cycle(training), xlab="month", ylab="Diesel price")
library(forecast)
BoxCox.lambda(training,  lower = -2, upper = 2)
acf(training, lag=50)
pacf(training, lag=50)
library(tseries)
adf.test(training , alternative=c("stationary", "explosive"))
library(tseries)
diff_training<- diff(training)
adf.test(diff_training, alternative=c("stationary", "explosive"))
plot(diff_training,ylab="us diesel retail price ",xlab="date", col="blue", type="o")
source("eacf.R")
acf(diff_training, lag=30)
pacf(diff_training, lag=30)
eacf(diff_training)
source("arima.R")
arima(training,order=c(0,1,0) ,method='ML')
source("arima.R")
arima(training,order=c(1,1,0) ,method='ML')
source("arima.R")
arima(training,order=c(1,1,1), method='ML')
testing
min (testing)
max (testing)
source("predict.TAR.R")
model=arima(training, order=c(1,1,1), method='ML')
predict_testing<- predict(model, n.ahead=63)
round (predict_testing$pred,4)
min(predict_testing$pred)
max(predict_testing$pred)
source ("plot.Arima.R")
plot(model, n.ahead=63, ylab= 'US diesel retail price', col="red", type="b")
lines(testing, col="blue", type="b")
library(forecast)
accuracy(predict_testing$pred, testing)
